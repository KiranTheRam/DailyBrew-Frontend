{"ast":null,"code":"var _jsxFileName = \"/home/hina/Documents/Reactjs/daily-brew/src/pages/AllBeer.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport BeerList from \"../components/beer/BeerList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AllBeer() {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [loadedBeers, setLoadedBeers] = useState([]);\n  useEffect(() => {\n    setIsLoading(true);\n    fetch(\"http://localhost:8080/beer/all-beer\").then(response => {\n      return response.json();\n    }).then(data => {\n      // Create an array of beers that will be filled from API request\n      const beers = [];\n\n      for (const key in data) {\n        // For each object in the data from the get request, let us assemble a beer object\n        const beer = {\n          id: key,\n          ...data[key]\n        }; // Add a beer to the beers array\n\n        beer.push(beer);\n      } // Once all the beers are loaded in, the page should no longer be loading\n\n\n      setIsLoading(false); // Change the state of loadedBeers to have the newly filled array\n\n      setLoadedBeers(beers);\n    });\n  }, []); // This is out loading screen\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading ... \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"All Beers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(BeerList, {\n        listOfBeers: loadedBeers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 10\n  }, this);\n}\n\n_s(AllBeer, \"dkiUa5894N6PBbIJm7BfqdLOQbE=\");\n\n_c = AllBeer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllBeer\");","map":{"version":3,"names":["React","useState","useEffect","BeerList","AllBeer","isLoading","setIsLoading","loadedBeers","setLoadedBeers","fetch","then","response","json","data","beers","key","beer","id","push"],"sources":["/home/hina/Documents/Reactjs/daily-brew/src/pages/AllBeer.js"],"sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport BeerList from \"../components/beer/BeerList\";\n\nexport default function AllBeer() {\n  const [isLoading, setIsLoading] = useState(true);\n  const [loadedBeers, setLoadedBeers] = useState([]);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    fetch(\n      \"http://localhost:8080/beer/all-beer\"\n    )\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        // Create an array of beers that will be filled from API request\n        const beers = [];\n        for (const key in data) {\n          // For each object in the data from the get request, let us assemble a beer object\n          const beer = {\n            id: key,\n            ...data[key],\n          };\n\n          // Add a beer to the beers array\n          beer.push(beer);\n        }\n\n        // Once all the beers are loaded in, the page should no longer be loading\n        setIsLoading(false);\n\n        // Change the state of loadedBeers to have the newly filled array\n        setLoadedBeers(beers);\n      });\n  }, []);\n\n  // This is out loading screen\n  if (isLoading) {\n    return (\n      <section>\n        <p>Loading ... </p>\n      </section>\n    );\n  }\n\n  return <div>\n        <section>\n      <h1>All Beers</h1>\n      <BeerList listOfBeers={loadedBeers} />\n    </section>\n  </div>;\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,QAAP,MAAqB,6BAArB;;AAEA,eAAe,SAASC,OAAT,GAAmB;EAAA;;EAChC,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,IAAD,CAA1C;EACA,MAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C;EAEAC,SAAS,CAAC,MAAM;IACdI,YAAY,CAAC,IAAD,CAAZ;IAEAG,KAAK,CACH,qCADG,CAAL,CAGGC,IAHH,CAGSC,QAAD,IAAc;MAClB,OAAOA,QAAQ,CAACC,IAAT,EAAP;IACD,CALH,EAMGF,IANH,CAMSG,IAAD,IAAU;MACd;MACA,MAAMC,KAAK,GAAG,EAAd;;MACA,KAAK,MAAMC,GAAX,IAAkBF,IAAlB,EAAwB;QACtB;QACA,MAAMG,IAAI,GAAG;UACXC,EAAE,EAAEF,GADO;UAEX,GAAGF,IAAI,CAACE,GAAD;QAFI,CAAb,CAFsB,CAOtB;;QACAC,IAAI,CAACE,IAAL,CAAUF,IAAV;MACD,CAZa,CAcd;;;MACAV,YAAY,CAAC,KAAD,CAAZ,CAfc,CAiBd;;MACAE,cAAc,CAACM,KAAD,CAAd;IACD,CAzBH;EA0BD,CA7BQ,EA6BN,EA7BM,CAAT,CAJgC,CAmChC;;EACA,IAAIT,SAAJ,EAAe;IACb,oBACE;MAAA,uBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EAKD;;EAED,oBAAO;IAAA,uBACD;MAAA,wBACF;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADE,eAEF,QAAC,QAAD;QAAU,WAAW,EAAEE;MAAvB;QAAA;QAAA;QAAA;MAAA,QAFE;IAAA;MAAA;MAAA;MAAA;IAAA;EADC;IAAA;IAAA;IAAA;EAAA,QAAP;AAMD;;GAlDuBH,O;;KAAAA,O"},"metadata":{},"sourceType":"module"}