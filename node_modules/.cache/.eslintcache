[{"/home/hina/Documents/Reactjs/daily-brew/src/index.js":"1","/home/hina/Documents/Reactjs/daily-brew/src/App.js":"2","/home/hina/Documents/Reactjs/daily-brew/src/pages/AllBeer.js":"3","/home/hina/Documents/Reactjs/daily-brew/src/pages/AddBeerPage.js":"4","/home/hina/Documents/Reactjs/daily-brew/src/components/layout/Layout.js":"5","/home/hina/Documents/Reactjs/daily-brew/src/components/layout/MainNav.js":"6","/home/hina/Documents/Reactjs/daily-brew/src/components/beer/BeerList.js":"7","/home/hina/Documents/Reactjs/daily-brew/src/components/beer/NewBeerForm.js":"8","/home/hina/Documents/Reactjs/daily-brew/src/components/ui/Card.js":"9","/home/hina/Documents/Reactjs/daily-brew/src/components/beer/BeerItem.js":"10","/home/hina/IdeaProjects/DailyBrew/DailyBrew-frontend/src/index.js":"11","/home/hina/IdeaProjects/DailyBrew/DailyBrew-frontend/src/App.js":"12","/home/hina/IdeaProjects/DailyBrew/DailyBrew-frontend/src/pages/AddBeerPage.js":"13","/home/hina/IdeaProjects/DailyBrew/DailyBrew-frontend/src/pages/AllBeer.js":"14","/home/hina/IdeaProjects/DailyBrew/DailyBrew-frontend/src/components/layout/Layout.js":"15","/home/hina/IdeaProjects/DailyBrew/DailyBrew-frontend/src/components/beer/NewBeerForm.js":"16","/home/hina/IdeaProjects/DailyBrew/DailyBrew-frontend/src/components/beer/BeerList.js":"17","/home/hina/IdeaProjects/DailyBrew/DailyBrew-frontend/src/components/layout/MainNav.js":"18","/home/hina/IdeaProjects/DailyBrew/DailyBrew-frontend/src/components/beer/BeerItem.js":"19","/home/hina/IdeaProjects/DailyBrew/DailyBrew-frontend/src/components/ui/Card.js":"20","/home/hina/IdeaProjects/DailyBrew/DailyBrew-frontend/src/pages/SignUp.js":"21","/home/hina/IdeaProjects/DailyBrew/DailyBrew-frontend/src/pages/LogIn.js":"22"},{"size":276,"mtime":1658932671996,"results":"23","hashOfConfig":"24"},{"size":446,"mtime":1658949027587,"results":"25","hashOfConfig":"24"},{"size":1449,"mtime":1658950029766,"results":"26","hashOfConfig":"24"},{"size":837,"mtime":1658950439928,"results":"27","hashOfConfig":"24"},{"size":277,"mtime":1658943733323,"results":"28","hashOfConfig":"24"},{"size":492,"mtime":1658949408087,"results":"29","hashOfConfig":"24"},{"size":485,"mtime":1658942969916,"results":"30","hashOfConfig":"24"},{"size":2177,"mtime":1658949404976,"results":"31","hashOfConfig":"24"},{"size":254,"mtime":1658933529749,"results":"32","hashOfConfig":"24"},{"size":521,"mtime":1658942761999,"results":"33","hashOfConfig":"24"},{"size":276,"mtime":1658932671996,"results":"34","hashOfConfig":"35"},{"size":638,"mtime":1660064119315,"results":"36","hashOfConfig":"35"},{"size":837,"mtime":1658950439928,"results":"37","hashOfConfig":"35"},{"size":1449,"mtime":1658950029766,"results":"38","hashOfConfig":"35"},{"size":277,"mtime":1658943733323,"results":"39","hashOfConfig":"35"},{"size":2177,"mtime":1658949404976,"results":"40","hashOfConfig":"35"},{"size":485,"mtime":1658942969916,"results":"41","hashOfConfig":"35"},{"size":648,"mtime":1660064082947,"results":"42","hashOfConfig":"35"},{"size":521,"mtime":1658942761999,"results":"43","hashOfConfig":"35"},{"size":254,"mtime":1658933529749,"results":"44","hashOfConfig":"35"},{"size":8065,"mtime":1660063435744,"results":"45","hashOfConfig":"35"},{"size":2877,"mtime":1660065352549,"results":"46","hashOfConfig":"35"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"miom8c",{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},"1jdgb1x",{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/hina/Documents/Reactjs/daily-brew/src/index.js",[],[],"/home/hina/Documents/Reactjs/daily-brew/src/App.js",[],[],"/home/hina/Documents/Reactjs/daily-brew/src/pages/AllBeer.js",[],[],"/home/hina/Documents/Reactjs/daily-brew/src/pages/AddBeerPage.js",[],[],"/home/hina/Documents/Reactjs/daily-brew/src/components/layout/Layout.js",[],[],"/home/hina/Documents/Reactjs/daily-brew/src/components/layout/MainNav.js",[],[],"/home/hina/Documents/Reactjs/daily-brew/src/components/beer/BeerList.js",[],[],[],"/home/hina/Documents/Reactjs/daily-brew/src/components/beer/NewBeerForm.js",[],[],"/home/hina/Documents/Reactjs/daily-brew/src/components/ui/Card.js",[],[],"/home/hina/Documents/Reactjs/daily-brew/src/components/beer/BeerItem.js",[],[],"/home/hina/IdeaProjects/DailyBrew/DailyBrew-frontend/src/index.js",[],[],[],"/home/hina/IdeaProjects/DailyBrew/DailyBrew-frontend/src/App.js",[],[],"/home/hina/IdeaProjects/DailyBrew/DailyBrew-frontend/src/pages/AddBeerPage.js",[],[],"/home/hina/IdeaProjects/DailyBrew/DailyBrew-frontend/src/pages/AllBeer.js",[],[],"/home/hina/IdeaProjects/DailyBrew/DailyBrew-frontend/src/components/layout/Layout.js",[],[],"/home/hina/IdeaProjects/DailyBrew/DailyBrew-frontend/src/components/beer/NewBeerForm.js",[],[],"/home/hina/IdeaProjects/DailyBrew/DailyBrew-frontend/src/components/beer/BeerList.js",[],[],"/home/hina/IdeaProjects/DailyBrew/DailyBrew-frontend/src/components/layout/MainNav.js",[],[],"/home/hina/IdeaProjects/DailyBrew/DailyBrew-frontend/src/components/beer/BeerItem.js",[],[],"/home/hina/IdeaProjects/DailyBrew/DailyBrew-frontend/src/components/ui/Card.js",[],[],"/home/hina/IdeaProjects/DailyBrew/DailyBrew-frontend/src/pages/SignUp.js",["117","118"],[],"import React, { useState, useRef, useEffect } from \"react\";\nimport Card from \"../components/ui/Card\";\nimport classes from \"./SignUp.module.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCheck,\n  faTimes,\n  faInfoCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { Link } from \"react-router-dom\";\n\n// Start with an upper or lowercase letter. Then followed by any letter or number. Min length 4 max len 24\nconst USER_REGEX = /^[A-z][A-z0-9-_]{3,23}$/;\n//   1 upper, 1 lower, 1 digit, 1 special char\nconst PWD_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%]).{8,24}$/;\n\nexport default function SignUp() {\n  const userRef = useRef();\n  const errRef = useRef();\n\n  const [user, setUser] = useState(\"\");\n  const [validName, setValidName] = useState(false);\n  const [userFocus, setUserFocus] = useState(false);\n\n  const [pwd, setPwd] = useState(\"\");\n  const [validPwd, setValidPwd] = useState(false);\n  const [pwdFocus, setPwdFocus] = useState(false);\n\n  const [matchPwd, setMatchPwd] = useState(\"\");\n  const [validMatch, setValidMatch] = useState(false);\n  const [matchFocus, setMatchFocus] = useState(false);\n\n  const [errMsg, setErrMsg] = useState(\"\");\n  const [success, setSuccess] = useState(false);\n\n  //   Used to set focus when page forst loads\n  useEffect(() => {\n    userRef.current.focus();\n  }, []);\n\n  //   Test the username being entered against our regex to see if it is valid\n  useEffect(() => {\n    setValidName(USER_REGEX.test(user));\n  }, [user]);\n\n  //   Test the password being entered against our regex to see if it is valid\n  //   Also test if out match password matches the original password\n  useEffect(() => {\n    setValidPwd(PWD_REGEX.test(pwd));\n    setValidMatch(pwd === matchPwd);\n  }, [pwd, matchPwd]);\n\n  useEffect(() => {\n    setErrMsg(\"\");\n  }, [user, pwd, matchPwd]);\n\n  function submitHandler(event) {\n    event.preventDefault();\n\n    // A second check before submit\n    if (!USER_REGEX.test(user) || !PWD_REGEX.test(pwd)) {\n      setErrMsg(\"Invalide Entry\");\n      return;\n    }\n    console.log(user, pwd);\n    setSuccess(true);\n  }\n\n  return (\n    <Card>\n      <p\n        ref={errRef}\n        className={`${!errMsg && classes.offscreen} ${\n          errMsg && classes.errMsg\n        }`}\n        aria-live=\"assertive\"\n      >\n        {errMsg}\n      </p>\n\n      <h1>Register</h1>\n\n      <form className={classes.form} onSubmit={submitHandler}>\n        {/* Username */}\n        <div className={classes.control}>\n          <label htmlFor=\"username\">\n            Username:\n            {/* If we have a valid username, apply class valid and display a check */}\n            <span\n              className={`${validName && classes.valid} ${\n                !validName && classes.hide\n              }`}\n            >\n              <FontAwesomeIcon icon={faCheck} />\n            </span>\n            {/* If we have a vailidName or if the username field doesn't have content yet, hide the X */}\n            <span\n              className={`${(validName || !user) && classes.hide} ${\n                (!validName || user) && classes.invalid\n              }`}\n            >\n              <FontAwesomeIcon icon={faTimes} />\n            </span>\n          </label>\n          <input\n            type=\"text\"\n            required\n            id=\"username\"\n            ref={userRef}\n            autoComplete=\"off\"\n            onChange={(e) => setUser(e.target.value)}\n            onFocus={() => setUserFocus(true)}\n            onBlur={() => setUserFocus(false)}\n            aria-invalid={validName ? \"false\" : \"true\"}\n            aria-describedby=\"uidnote\"\n          />\n          <p\n            id=\"uidnote\"\n            className={`${\n              userFocus && user && !validName && classes.instructions\n            } ${(!userFocus || !user || validName) && classes.offscreen}`}\n          >\n            <FontAwesomeIcon icon={faInfoCircle} />\n            4 to 24 characters. <br />\n            Must begin with a letter. <br />\n            Letters, numbers, underscores, hyphens are allowed. <br />\n          </p>\n        </div>\n\n        {/* Password */}\n        <div className={classes.control}>\n          <label htmlFor=\"password\">\n            Password:\n            {/* If we have a valid password, apply class valid and display a check */}\n            <span\n              className={`${validPwd && classes.valid} ${\n                !validPwd && classes.hide\n              }`}\n            >\n              <FontAwesomeIcon icon={faCheck} />\n            </span>\n            {/* If we have a valid password or if the password field doesn't have content yet, hide the X */}\n            <span\n              className={`${(validPwd || !pwd) && classes.hide} ${\n                (!validPwd || pwd) && classes.invalid\n              }`}\n            >\n              <FontAwesomeIcon icon={faTimes} />\n            </span>\n          </label>\n          <input\n            type=\"password\"\n            required\n            id=\"password\"\n            onChange={(e) => setPwd(e.target.value)}\n            onFocus={() => setPwdFocus(true)}\n            onBlur={() => setPwdFocus(false)}\n            aria-invalid={validPwd ? \"false\" : \"true\"}\n            aria-describedby=\"pwdnote\"\n          />\n\n          <p\n            id=\"pwdnote\"\n            className={`${\n              pwdFocus && pwd && !validPwd && classes.instructions\n            } ${(!pwdFocus || !pwd || validPwd) && classes.offscreen}`}\n          >\n            <FontAwesomeIcon icon={faInfoCircle} />\n            8 to 24 characters. <br />\n            Must include uppercase and lowercase letters, a number, and special\n            character <br />\n            Letters, numbers, underscores, hyphens are allowed. <br />\n            Allowed special characters:\n            <span aria-label=\"at symbol\">@,</span>\n            <span aria-label=\"exclamation point\">!,</span>\n            <span aria-label=\"hash tag\">#,</span>\n            <span aria-label=\"dollar sign\">$</span>\n            <br />\n          </p>\n        </div>\n\n        {/* Match Password */}\n        <div className={classes.control}>\n          <label htmlFor=\"match\">\n            Confirm Password:\n            {/* If we have a valid match, apply class valid and display a check */}\n            {/* matchPwd is included here to stop the check from displaying if the Password and Confirm fields were both empty */}\n            <span\n              className={`${validMatch && matchPwd && classes.valid} ${\n                (!validMatch || !matchPwd) && classes.hide\n              }`}\n            >\n              <FontAwesomeIcon icon={faCheck} />\n            </span>\n            {/* If we have a valid match or if the password field doesn't have content yet, hide the X */}\n            <span\n              className={`${(validMatch || !matchPwd) && classes.hide} ${\n                (!validMatch || matchPwd) && classes.invalid\n              }`}\n            >\n              <FontAwesomeIcon icon={faTimes} />\n            </span>\n          </label>\n          <input\n            type=\"password\"\n            required\n            id=\"match\"\n            onChange={(e) => setMatchPwd(e.target.value)}\n            onFocus={() => setMatchFocus(true)}\n            onBlur={() => setMatchFocus(false)}\n            aria-invalid={validMatch ? \"false\" : \"true\"}\n            aria-describedby=\"matchnote\"\n          />\n\n          <p\n            id=\"matchnote\"\n            className={`${matchFocus && !validMatch && classes.instructions} ${\n              (!matchFocus || validMatch) && classes.offscreen\n            }`}\n          >\n            <FontAwesomeIcon icon={faInfoCircle} />\n            Must match password field\n          </p>\n        </div>\n\n        <div className={classes.actions}>\n          <button\n            disabled={!validName || !validPwd || !validMatch ? true : false}\n          >\n            Sign Up\n          </button>\n        </div>\n      </form>\n      {/* <p>\n        Already have an account?\n        <br />\n        <span>\n          <Link></Link>\n        </span>\n      </p> */}\n    </Card>\n  );\n}\n",[],"/home/hina/IdeaProjects/DailyBrew/DailyBrew-frontend/src/pages/LogIn.js",["119","120","121"],[],{"ruleId":"122","severity":1,"message":"123","line":10,"column":10,"nodeType":"124","messageId":"125","endLine":10,"endColumn":14},{"ruleId":"122","severity":1,"message":"126","line":34,"column":10,"nodeType":"124","messageId":"125","endLine":34,"endColumn":17},{"ruleId":"122","severity":1,"message":"127","line":4,"column":10,"nodeType":"124","messageId":"125","endLine":4,"endColumn":25},{"ruleId":"122","severity":1,"message":"128","line":5,"column":10,"nodeType":"124","messageId":"125","endLine":5,"endColumn":17},{"ruleId":"122","severity":1,"message":"123","line":6,"column":10,"nodeType":"124","messageId":"125","endLine":6,"endColumn":14},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'success' is assigned a value but never used.","'FontAwesomeIcon' is defined but never used.","'faTimes' is defined but never used."]